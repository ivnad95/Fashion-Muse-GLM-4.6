// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  generations   Generation[]
  settings      UserSettings?
  
  @@index([email])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Generation {
  id            String   @id @default(cuid())
  userId        String
  
  // Input Data
  originalUrl   String
  imageCount    Int
  aspectRatio   String   @default("portrait")
  
  // Generation Details
  prompt        String
  style         String?
  cameraAngle   String?
  lighting      String?
  
  // Results
  resultUrls    String   // JSON array of URLs
  status        String   @default("pending") // pending, processing, completed, failed, cancelled
  errorMessage  String?
  
  // Metadata
  processingTime Int?
  modelUsed     String   @default("gemini-2.5-flash-image-preview")
  
  // User Actions
  isFavorite    Boolean  @default(false)
  isPublic      Boolean  @default(false)
  views         Int      @default(0)
  downloads     Int      @default(0)
  
  // Timestamps
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  completedAt   DateTime?
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId, createdAt])
  @@index([userId, isFavorite])
  @@index([userId, status])
}

model UserSettings {
  id           String   @id @default(cuid())
  userId       String   @unique
  displayName  String?
  aspectRatio  String   @default("portrait")
  blurStrength Int      @default(24)
  theme        String   @default("dark")
  language     String   @default("en")
  geminiApiKey String?
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
